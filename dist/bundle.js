(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var presenter_1 = require("./presenter/presenter");
var presenter = new presenter_1.Presenter();

},{"./presenter/presenter":3}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Formatter = (function () {
    function Formatter() {
    }
    Formatter.prototype.format = function (type, scope, subject, body, footer) {
        var out = "";
        out += type;
        if (scope != "") {
            out += "(" + scope + ")";
        }
        out += ": " + subject;
        out += body == "" ? "" : "<br><br>" + body;
        out += footer == "" ? "" : "<br><br>" + footer;
        return out;
    };
    return Formatter;
}());
exports.Formatter = Formatter;

},{}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var view_1 = require("../view/view");
var formatter_1 = require("../model/formatter");
var Presenter = (function () {
    function Presenter() {
        this.view = new view_1.View(document, this);
        this.formatter = new formatter_1.Formatter();
        this.initialize();
    }
    Presenter.prototype.initialize = function () {
    };
    Presenter.prototype.toFormat = function () {
        this.view.displayFormattedText(this.formatter.format(this.view.getType(), this.view.getScope(), this.view.getSubject(), this.view.getBody(), this.view.getFooter()));
    };
    Presenter.prototype.toCheckRule = function () { };
    return Presenter;
}());
exports.Presenter = Presenter;

},{"../model/formatter":2,"../view/view":4}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var View = (function () {
    function View(DOM, presenter) {
        this.presenter = presenter;
        this.DOM = DOM;
        this.DOM
            .getElementById("ddl_type")
            .addEventListener("change", userInputed);
        this.DOM
            .getElementById("txt_scope")
            .addEventListener("input", userInputed);
        this.DOM
            .getElementById("txt_subject")
            .addEventListener("input", userInputed);
        this.DOM
            .getElementById("txa_body")
            .addEventListener("input", userInputed);
        this.DOM
            .getElementById("txa_footer")
            .addEventListener("input", userInputed);
        var self = this;
        function userInputed() {
            self.presenter.toFormat();
        }
        this.setPlaceholder();
        this.setTypes();
    }
    View.prototype.setTypes = function () {
        var input = this.DOM.getElementById("ddl_type");
        var opt = document.createElement('option');
        opt.appendChild(document.createTextNode('feat‚ú®'));
        input.appendChild(opt);
        opt = document.createElement('option');
        opt.appendChild(document.createTextNode('fixüêõ'));
        input.appendChild(opt);
        opt = document.createElement('option');
        opt.appendChild(document.createTextNode('perf‚ö°Ô∏è'));
        input.appendChild(opt);
        opt = document.createElement('option');
        opt.appendChild(document.createTextNode('test‚úÖ'));
        input.appendChild(opt);
        opt = document.createElement('option');
        opt.appendChild(document.createTextNode('docsüìù'));
        input.appendChild(opt);
        opt = document.createElement('option');
        opt.appendChild(document.createTextNode('refactor‚ôªÔ∏è'));
        input.appendChild(opt);
        opt = document.createElement('option');
        opt.appendChild(document.createTextNode('styleüíÑ'));
        input.appendChild(opt);
        opt = document.createElement('option');
        opt.appendChild(document.createTextNode('revertüîô'));
        input.appendChild(opt);
        opt = document.createElement('option');
        opt.appendChild(document.createTextNode('buildüì¶'));
        input.appendChild(opt);
        opt = document.createElement('option');
        opt.appendChild(document.createTextNode('configüîß'));
        input.appendChild(opt);
        opt = document.createElement('option');
        opt.appendChild(document.createTextNode('gitüêô'));
        input.appendChild(opt);
        opt = document.createElement('option');
        opt.appendChild(document.createTextNode('chore‚öôÔ∏è'));
        input.appendChild(opt);
        opt = document.createElement('option');
        opt.appendChild(document.createTextNode('initüéâ'));
        input.appendChild(opt);
        opt = document.createElement('option');
        opt.appendChild(document.createTextNode('publishüöÄ'));
        input.appendChild(opt);
    };
    View.prototype.setPlaceholder = function () {
        var input = this.DOM.getElementById("ddl_type");
        var opt = document.createElement('option');
        opt.appendChild(document.createTextNode('<type>'));
        input.appendChild(opt);
        input = this.DOM.getElementById("txt_scope");
        input.placeholder = "<scope>";
        input = this.DOM.getElementById("txt_subject");
        input.placeholder = "<subject>";
        input = this.DOM.getElementById("txa_body");
        input.placeholder = "<body>";
        input = this.DOM.getElementById("txa_footer");
        input.placeholder = "<footer>";
    };
    View.prototype.displayFormattedText = function (text) {
        this.DOM.getElementById("p_formatted").innerHTML = text;
    };
    View.prototype.displayWarning = function (text) {
    };
    View.prototype.getType = function () {
        var input = this.DOM.getElementById("ddl_type");
        return input.value;
    };
    View.prototype.getScope = function () {
        var input = this.DOM.getElementById("txt_scope");
        return input.value;
    };
    View.prototype.getSubject = function () {
        var input = this.DOM.getElementById("txt_subject");
        return input.value;
    };
    View.prototype.getBody = function () {
        var input = this.DOM.getElementById("txa_body");
        return input.value;
    };
    View.prototype.getFooter = function () {
        var input = this.DOM.getElementById("txa_footer");
        return input.value;
    };
    return View;
}());
exports.View = View;

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
